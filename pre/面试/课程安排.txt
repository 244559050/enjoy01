5.20 自定义流式布局
5.23 动画 - 属性动画
5.25 View的滑动
5.27 canvas paint简单使用
5.30 文字绘制，绘制的顺序问题，matrix










流式布局：把子控件从左到右的排放，如果一行放不下，那么自动换行


自定义布局流程：
1. 自定义属性：声明，设置，解析获取自定义值
在attr.xml 声明：
<?xml version="1.0" encoding="utf-8"?>

<resources>
	<declare-styleable name="FlowLayout">
		<attr name="android:gravity" />
		<attr name="horizonSpacing" format="dimension|reference"/>
	</declare-styleable>
	<declare-styleable name="FlowLayout_Layout">
		<attr name="android:layout_gravity" />
	</declare-styleable>
</resources>
2. 自定义属性： 引入命名空间
xmlns:app="http://schemas.android.com/apk/res-auto"
3. 解析：
 TypedArray a = c.obtainStyledAttributes(attrs,R.styleable.FlowLayout_Layout);
            try{
               gravity = a.getInt(R.styleable.FlowLayout_Layout_android_layout_gravity,-1); 
            }finally {
                a.recycle();
            }



2. 测量：在onMeasure MeasureSpec.AT_MOST/EXACTlY 
 自身的宽高/child的宽高
 FlowLayout 本身 宽 AT_MOST(FlowLayout父层给的限制)  layout_width:wrap_content: 给默认值，宽度最大的
 
 AT_MOST: 所有的行数的累加的高度
 
 子View： layout_height wrap_content child layout_height match_parent: 这一行里面高度最大的
 
 
3. 布局：在onLayout方法里面根据自己规则来确定children的位置



4. 绘制：onDraw
5. 处理LayoutParams 
6. 触摸反馈：滑动事件

a. 通过View的ScrollBy 和ScrollTo方法实现滑动
b. 通过动画给View添加位移效果来实现滑动（补间动画）
c. 通过改变View的 layoutparams 让View 重新布局从而实现滑动

自定义ViewGroup滑动

onInterceptTouchEvent 
当前这一系列的事件 是有本身来消费  dx < dy  dy > min
                   交给子View
				   
onTouchEvent 做滑动


Scroller 































